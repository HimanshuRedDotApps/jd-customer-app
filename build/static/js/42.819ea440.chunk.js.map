{"version":3,"sources":["../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","../node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js","views/app-views/machine-and-sensor/add-new-sensor/index.js"],"names":["Row","Col","CloseCircleOutlined","props","ref","React","AntdIcon","_extends","icon","CloseCircleOutlinedSvg","Option","Select","AddNewSensor","history","useHistory","id","useParams","form","Form","useForm","machineStatus","setMachineStatus","useState","selectedFiles","setSelectedFiles","styles","files","listStyle","display","alignItems","justifyContent","gap","border","padding","borderRadius","background","uploadFile","position","width","height","opacity","visibility","content","cursor","backgroundColor","_jsxs","children","_jsx","MachineSensorIcon","style","color","fontWeight","labelCol","span","wrapperCol","onFinish","async","payload","machine_id","sensor_type","values","sensor_id","sensor_name","sensor_location","sensor_details","sensor_status","is_deleted","axiosInstance","post","message","success","goBack","error","console","name","className","gutter","Item","label","Input","disabled","rules","required","value","TextArea","rows","valuePropName","Switch","checked","onChange","UploadFileIcon","type","multiple","event","fileList","target","newSelectedFiles","i","length","push","map","file","onClick","AfterDeleteFile","filter","elem","index","delUplFile","Button","htmlType","handleBackClick"],"mappings":"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","file":"static/js/42.819ea440.chunk.js","sourcesContent":["import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport CloseCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar CloseCircleOutlined = function CloseCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: CloseCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CloseCircleOutlined.displayName = 'CloseCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(CloseCircleOutlined);","import React, { useState } from 'react';\r\nimport { Form, Input, Select, Row, Col, Button, Switch, message } from 'antd';\r\nimport { MachineSensorIcon, UploadFileIcon } from 'assets/svg/icon';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { axiosInstance } from 'App';\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddNewSensor = () => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const [form] = Form.useForm();\r\n  const [machineStatus, setMachineStatus] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const styles = {\r\n    files: {\r\n      listStyle: \"none\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n      gap: \"13px\",\r\n      border: \"1px solid lightblue\",\r\n      padding: \"10px\",\r\n      borderRadius: \"9px\",\r\n      background: \"#0093ff0a\",\r\n    },\r\n    uploadFile: {\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      opacity: 0,\r\n    },\r\n    \".uploadFile::-webkit-file-upload-button\": {\r\n      visibility: \"hidden\",\r\n    },\r\n    \".uploadFile::before\": {\r\n      content: \"'Drag & Drop'\",\r\n      display: \"inline-block\",\r\n      padding: \"10px\",\r\n      border: \"1px solid #ccc\",\r\n      borderRadius: \"4px\",\r\n      cursor: \"pointer\",\r\n    },\r\n    \".uploadFile:hover::before\": {\r\n      backgroundColor: \"#ccc\",\r\n    },\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    const payload = {\r\n      machine_id: id, // Assuming id is the machine ID from the URL\r\n      sensor_type: values.sensor_type,\r\n      sensor_id: values.sensor_id,\r\n      sensor_name: values.sensor_name,\r\n      sensor_location: values.sensor_location,\r\n      sensor_details: values.sensor_details,\r\n      sensor_status: machineStatus,\r\n      is_deleted: false,\r\n    };\r\n\r\n    try {\r\n      const response = await axiosInstance.post('/api/admin/machine-senser/store', payload);\r\n      message.success('Sensor added successfully!');\r\n      history.goBack(); // Navigate to the sensors list page\r\n    } catch (error) {\r\n      message.error('Failed to add sensor. Please try again.');\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = (event) => {\r\n    const fileList = event.target.files;\r\n    const newSelectedFiles = [];\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      newSelectedFiles.push(fileList[i]);\r\n    }\r\n    setSelectedFiles([...selectedFiles, newSelectedFiles[0]]);\r\n  };\r\n\r\n  const delUplFile = (i) => {\r\n    const AfterDeleteFile = selectedFiles.filter((elem, index) => index !== i);\r\n    setSelectedFiles(AfterDeleteFile);\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>\r\n        <MachineSensorIcon />\r\n        <span style={{ color: '#6a6a6a', fontWeight: '300' }}>\r\n          Machine / sensors\r\n        </span> / Add New Sensor\r\n      </h4>\r\n      <Form\r\n        labelCol={{ span: 24 }}\r\n        wrapperCol={{ span: 24 }}\r\n        onFinish={onFinish}\r\n        form={form}\r\n        name=\"control-hooks\"\r\n      >\r\n        <div className=\"border rounded p-3 bg-white\">\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Machine Name\" name=\"machineName\">\r\n                <Input disabled />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Sensor Type\"\r\n                name=\"sensor_type\"\r\n                rules={[{ required: true, message: 'Please Select Sensor Type' }]}\r\n              >\r\n                <Select>\r\n                  <Option value=\"Temperature\">Sensor Type 1</Option>\r\n                  <Option value=\"Pressure\">Sensor Type 2</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Sensor ID\"\r\n                name=\"sensor_id\"\r\n                rules={[{ required: true, message: 'Please enter Sensor ID' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Sensor Name\"\r\n                name=\"sensor_name\"\r\n                rules={[{ required: true, message: 'Please enter Sensor Name' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Sensor Location\"\r\n                name=\"sensor_location\"\r\n                rules={[{ required: true, message: 'Please enter Sensor Location' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Sensor Details\"\r\n                name=\"sensor_details\"\r\n                rules={[{ required: true, message: 'Please enter Sensor Details' }]}\r\n              >\r\n                <Input.TextArea rows={4} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Sensor Status\" name=\"SensorStatus\" valuePropName=\"checked\">\r\n                <Switch\r\n                  checked={machineStatus}\r\n                  onChange={(value) => setMachineStatus(value)}\r\n                  style={{ backgroundColor: machineStatus ? '#3CA6C1' : '#d0d4d7' }}\r\n                />{' '}\r\n                {machineStatus ? 'Active' : 'Inactive'}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <h5 className=\"m-0 mt-2\">Upload Pictures</h5>\r\n              <div className=\"p-3\">\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center position-relative uploaddoc\">\r\n                  <UploadFileIcon />\r\n                  <h5 className=\"mb-0 mt-2\">Drag & Drop Files Here</h5>\r\n                  <h5 className=\"mb-0\">Or</h5>\r\n                  <h5 className=\"mb-0\" style={{ color: '#3CA6C1' }}>\r\n                    Click here to upload\r\n                  </h5>\r\n                  <input\r\n                    style={styles.uploadFile}\r\n                    className=\"uploadFile\"\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={handleFileSelect}\r\n                  />\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  {selectedFiles.length > 0 && (\r\n                    <ul className=\"p-0\" style={{ width: '100%' }}>\r\n                      {selectedFiles.map((file, i) => (\r\n                        <li key={file.name} className=\"my-3\" style={styles.files}>\r\n                          <div className=\"d-flex align-items-center\">\r\n                            <UploadFileIcon /> <span className=\"ml-2\">{file.name}</span>\r\n                          </div>\r\n                          <span style={{ cursor: 'pointer' }} onClick={() => delUplFile(i)}>\r\n                            <CloseCircleOutlined />\r\n                          </span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <Form.Item>\r\n          <div style={{ gap: '10px' }} className=\"mt-5 d-flex justify-content-end\">\r\n            <Button className=\"px-4 font-weight-semibold\" htmlType=\"button\" onClick={handleBackClick}>\r\n              Back\r\n            </Button>\r\n            <Button className=\"px-4 font-weight-semibold text-white bg-primary\" htmlType=\"submit\">\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewSensor;\r\n"],"sourceRoot":""}