{"version":3,"sources":["views/app-views/machine-and-sensor/index.js"],"names":["MachineAndSensor","history","useHistory","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","responseData","wrap","_context","prev","next","axiosInstance","get","sent","status","items","Array","isArray","console","error","log","JSON","stringify","t0","stop","apply","arguments","fetchData","datas","map","value","key","id","ID","image","Customer","name","Jobsite","Machines","machine_detail","ActiveSince","MachineStatus","machine_status","OverallStatus","deleteRow","_ref2","_callee2","_context2","delete","concat","prevData","filter","item","_x","getMenu","record","_jsxs","Menu","children","Item","onClick","push","_jsx","EditOutlined","DeleteOutlined","columns","title","dataIndex","render","text","Avatar","src","alt","Space","size","Dropdown","overlay","placement","trigger","MoreOutlined","ToolOutlined","className","style","display","direction","Input","placeholder","allowClear","onChange","onSearch","width","prefix","SearchOutlined","marginRight","Button","icon","Icon","component","CsvIcon","Link","to","Table","dataSource"],"mappings":"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","file":"static/js/49.1a8a8b2f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Space, Avatar, Dropdown, Menu, Input, Button } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, MoreOutlined, SearchOutlined, ToolOutlined } from '@ant-design/icons';\r\nimport { CsvIcon } from 'assets/svg/icon';\r\nimport Icon from '@ant-design/icons/lib/components/Icon';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom';\r\nimport { axiosInstance } from 'App';\r\n\r\nconst MachineAndSensor = () => {\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('api/admin/machine');\r\n        if (response.status === 200) {\r\n          const responseData = response.data.items;\r\n          if (Array.isArray(responseData)) {\r\n            setData(responseData);\r\n          } else {\r\n            console.error('Unexpected response format:', responseData);\r\n          }\r\n          console.log(JSON.stringify(responseData));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const datas = Array.isArray(data)\r\n    ? data.map((value) => ({\r\n      key: value.id,\r\n      ID: value.id,\r\n      image: value.image || 'https://images.unsplash.com/photo-1708616748538-bdd66d6a9e25?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n      Customer: value.name,\r\n      Jobsite: value.Jobsite,\r\n      Machines: value.machine_detail,\r\n      ActiveSince: value.ActiveSince,\r\n      MachineStatus: value.machine_status,\r\n      OverallStatus: value.OverallStatus,\r\n    }))\r\n    : [];\r\n\r\n  const deleteRow = async (id) => {\r\n    console.log(id)\r\n    try {\r\n      const response = await axiosInstance.delete(`api/admin/machine/${id}/delete`);\r\n      if (response.status === 200) {\r\n        console.log('Deleted successfully');\r\n        setData((prevData) => prevData.filter((item) => item.id !== id));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting row:', error);\r\n    }\r\n  };\r\n\r\n  const getMenu = (record) => (\r\n    <Menu>\r\n      <Menu.Item key=\"edit\" onClick={() => history.push(`/app/machine-and-sensors/machine-details/${record.ID}`)}>\r\n        <EditOutlined /> View Details\r\n      </Menu.Item>\r\n      <Menu.Item key=\"viewSensors\" onClick={() => history.push(`/app/machine-and-sensors/sensor-list/${record.ID}`)}>\r\n        <DeleteOutlined /> View Sensors\r\n      </Menu.Item>\r\n      <Menu.Item key=\"delete\" onClick={() => deleteRow(record.ID)}>\r\n        <DeleteOutlined /> Delete\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'ID',\r\n      key: 'ID',\r\n    },\r\n    {\r\n      title: 'Image',\r\n      dataIndex: 'image',\r\n      key: 'image',\r\n      render: (text, record) => <Avatar src={text} alt={`Avatar for ${record.Customer}`} />,\r\n    },\r\n    {\r\n      title: 'Customer',\r\n      dataIndex: 'Customer',\r\n      key: 'Customer',\r\n    },\r\n    {\r\n      title: 'Jobsite',\r\n      dataIndex: 'Jobsite',\r\n      key: 'Jobsite',\r\n    },\r\n    {\r\n      title: 'Machines',\r\n      dataIndex: 'Machines',\r\n      key: 'Machines',\r\n    },\r\n    {\r\n      title: 'Active Since',\r\n      dataIndex: 'ActiveSince',\r\n      key: 'ActiveSince',\r\n    },\r\n    {\r\n      title: 'Machine Status',\r\n      dataIndex: 'MachineStatus',\r\n      key: 'MachineStatus',\r\n    },\r\n    {\r\n      title: 'Overall Status',\r\n      dataIndex: 'OverallStatus',\r\n      key: 'OverallStatus',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Dropdown overlay={getMenu(record)} placement=\"bottomRight\" trigger={['hover']}>\r\n            <MoreOutlined />\r\n          </Dropdown>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h4>\r\n        <ToolOutlined /> Machine & Sensors\r\n      </h4>\r\n      <div className=\"d-flex justify-content-between mb-3\">\r\n        <div style={{ display: 'flex' }}>\r\n          <Space direction=\"vertical\">\r\n            <Input\r\n              placeholder=\"Search\"\r\n              allowClear\r\n              onChange={(onSearch) => { }}\r\n              style={{ width: 200 }}\r\n              prefix={<SearchOutlined style={{ marginRight: 8 }} />}\r\n            />\r\n          </Space>\r\n          <Button icon={<Icon component={CsvIcon} />} className=\"d-flex align-items-center ml-2\">\r\n            Export\r\n          </Button>\r\n        </div>\r\n        <div className=\"mb-2 d-flex align-items-center\">\r\n          <Button className=\"ml-3 bg-primary d-flex align-items-center rounded text-white font-weight-semibold px-4\">\r\n            <Link to={'machine-and-sensors/add-new'}>+ Add New</Link>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Table dataSource={datas} columns={columns} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MachineAndSensor;\r\n"],"sourceRoot":""}