{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","../node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js","views/app-views/machine-and-sensor/add-new/index.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Row","Col","CloseCircleOutlined","props","ref","React","AntdIcon","_extends","icon","CloseCircleOutlinedSvg","Option","Select","AddNewMachine","history","useHistory","_Form$useForm","Form","useForm","form","_slicedToArray","_useState","useState","_useState2","machineStatus","setMachineStatus","_useState3","_useState4","selectedFiles","setSelectedFiles","onFinish","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","postData","response","wrap","_context","prev","next","console","log","user_id","name","machineName","model","machineModal","serial_no","serialNo","kw_hp","kwHp","manufacturer","manufacture","rpm","frequency","nde_bearing","ndeBearing","de_bearing","deBearing","tag_no","tagNo","vft","year","equipment","ampere","amper","color","ins","phase","ex_type","exType","ip","operator","ex_cert","exCert","date","machine_detail","machineDetails","machine_status","is_deleted","axiosInstance","post","sent","data","status","push","t0","error","stop","_x","apply","arguments","styles","files","listStyle","display","alignItems","justifyContent","gap","border","padding","borderRadius","background","uploadFile","position","width","height","opacity","visibility","content","cursor","backgroundColor","_jsxs","children","_jsx","ToolOutlined","style","fontWeight","labelCol","span","wrapperCol","className","MachineIcon","gutter","Item","label","rules","required","message","value","Input","type","Radio","Group","TextArea","onChange","event","fileList","target","newSelectedFiles","i","length","concat","map","file","index","onClick","AfterDeleteFile","filter","_","delUplFile","Switch","checked","Button","goBack","htmlType"],"mappings":"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","file":"static/js/39.6f168e95.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport CloseCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar CloseCircleOutlined = function CloseCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: CloseCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CloseCircleOutlined.displayName = 'CloseCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(CloseCircleOutlined);","import React, { useState } from 'react';\r\nimport { Form, Input, Select, Radio, Row, Col, Button, Switch } from 'antd';\r\nimport { MachineIcon } from 'assets/svg/icon';\r\nimport { CloseCircleOutlined, ToolOutlined } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { axiosInstance } from 'App';\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddNewMachine = () => {\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n  const [machineStatus, setMachineStatus] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleFileSelect = (event) => {\r\n    const fileList = event.target.files;\r\n    const newSelectedFiles = [];\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      newSelectedFiles.push(fileList[i]);\r\n    }\r\n    setSelectedFiles([...selectedFiles, ...newSelectedFiles]);\r\n  };\r\n\r\n  const delUplFile = (i) => {\r\n    let AfterDeleteFile = selectedFiles.filter((_, index) => index !== i);\r\n    setSelectedFiles(AfterDeleteFile);\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    console.log('Form values:', values);\r\n\r\n    const postData = {\r\n      user_id: 1,\r\n      name: values.machineName,\r\n      model: values.machineModal,\r\n      serial_no: values.serialNo,\r\n      kw_hp: values.kwHp,\r\n      manufacturer: values.manufacture,\r\n      rpm: values.rpm,\r\n      frequency: values.frequency,\r\n      nde_bearing: values.ndeBearing,\r\n      de_bearing: values.deBearing,\r\n      tag_no: values.tagNo,\r\n      vft: values.vft === 'yes' ? 1 : 0,\r\n      year: values.year,\r\n      equipment: values.equipment,\r\n      ampere: values.amper,\r\n      color: values.color,\r\n      ins: values.ins,\r\n      phase: values.phase,\r\n      ex_type: values.exType,\r\n      ip: values.ip,\r\n      operator: values.operator,\r\n      ex_cert: values.exCert,\r\n      date: values.date,\r\n      machine_detail: values.machineDetails,\r\n      machine_status: machineStatus,\r\n      is_deleted: false,\r\n    };\r\n\r\n    try {\r\n      const response = await axiosInstance.post('/api/admin/machine', postData);\r\n      console.log('Machine added successfully:', response.data);\r\n      if (response.status === 200 || response.status === 201) {\r\n        history.push(`/app/machine-and-sensors`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding machine:', error);\r\n      // Handle error, e.g., show notification\r\n    }\r\n  };\r\n\r\n  const styles = {\r\n    files: {\r\n      listStyle: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      gap: '13px',\r\n      border: '1px solid lightblue',\r\n      padding: '10px',\r\n      borderRadius: '9px',\r\n      background: '#0093ff0a',\r\n    },\r\n    uploadFile: {\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%',\r\n      opacity: 0,\r\n    },\r\n    '.uploadFile::-webkit-file-upload-button': {\r\n      visibility: 'hidden',\r\n    },\r\n    '.uploadFile::before': {\r\n      content: \"'Drag & Drop'\",\r\n      display: 'inline-block',\r\n      padding: '10px',\r\n      border: '1px solid #ccc',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer',\r\n    },\r\n    '.uploadFile:hover::before': {\r\n      backgroundColor: '#ccc',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>\r\n        <ToolOutlined />\r\n        <span style={{ color: '#6a6a6a', fontWeight: '300' }}> Machine</span> / Add New Machine\r\n      </h4>\r\n      <Form\r\n        labelCol={{ span: 24 }}\r\n        wrapperCol={{ span: 24 }}\r\n        onFinish={onFinish}\r\n        form={form}\r\n        name=\"control-hooks\"\r\n      >\r\n        <div className=\"border rounded p-3 bg-white\">\r\n          <h4 className=\"d-flex align-items-center\" style={{ color: '#3CA6C1', gap: '4px' }}>\r\n            <MachineIcon /> Add New Machine\r\n          </h4>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Select Customer\"\r\n                name=\"customer\"\r\n                rules={[{ required: true, message: 'Please Select Customer' }]}\r\n              >\r\n                <Select>\r\n                  <Option value=\"customer1\">Customer 1</Option>\r\n                  <Option value=\"customer2\">Customer 2</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Machine Name\"\r\n                name=\"machineName\"\r\n                rules={[{ required: true, message: 'Please enter Machine Name' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Select Job Site\"\r\n                name=\"jobSite\"\r\n                rules={[{ required: true, message: 'Please Select Job Site' }]}\r\n              >\r\n                <Select>\r\n                  <Option value=\"site1\">Job Site 1</Option>\r\n                  <Option value=\"site2\">Job Site 2</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Machine Modal\"\r\n                name=\"machineModal\"\r\n                rules={[{ required: true, message: 'Please enter Machine Modal' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Serial No\"\r\n                name=\"serialNo\"\r\n                rules={[{ required: true, message: 'Please enter Serial No' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"kw/Hp\"\r\n                name=\"kwHp\"\r\n                rules={[{ required: true, message: 'Please enter kw/Hp' }]}\r\n              >\r\n                <Input type=\"number\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Manufacture\"\r\n                name=\"manufacture\"\r\n                rules={[{ required: true, message: 'Please enter Manufacture' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"RPM\"\r\n                name=\"rpm\"\r\n                rules={[{ required: true, message: 'Please enter RPM' }]}\r\n              >\r\n                <Input type=\"number\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Frequency (Hz)\"\r\n                name=\"frequency\"\r\n                rules={[{ required: true, message: 'Please enter Frequency (Hz)' }]}\r\n              >\r\n                <Input type=\"number\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"NDE Bearing\"\r\n                name=\"ndeBearing\"\r\n                rules={[{ required: true, message: 'Please enter NDE Bearing' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"DE Bearing\"\r\n                name=\"deBearing\"\r\n                rules={[{ required: true, message: 'Please enter DE Bearing' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Tag No\"\r\n                name=\"tagNo\"\r\n                rules={[{ required: true, message: 'Please enter Tag No' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"VFT\"\r\n                name=\"vft\"\r\n                rules={[{ required: true, message: 'Please Select VFT' }]}\r\n              >\r\n                <Radio.Group>\r\n                  <Radio value=\"yes\">Yes</Radio>\r\n                  <Radio value=\"no\">No</Radio>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Year\"\r\n                name=\"year\"\r\n                rules={[{ required: true, message: 'Please enter Year' }]}\r\n              >\r\n                <Input type=\"number\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Equipment\"\r\n                name=\"equipment\"\r\n                rules={[{ required: true, message: 'Please enter Equipment' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Ampere\"\r\n                name=\"amper\"\r\n                rules={[{ required: true, message: 'Please enter Ampere' }]}\r\n              >\r\n                <Input type=\"number\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Color\"\r\n                name=\"color\"\r\n                rules={[{ required: true, message: 'Please enter Color' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"INS\"\r\n                name=\"ins\"\r\n                rules={[{ required: true, message: 'Please enter INS' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Phase\"\r\n                name=\"phase\"\r\n                rules={[{ required: true, message: 'Please enter Phase' }]}\r\n              >\r\n                <Input type=\"number\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"EX Type\"\r\n                name=\"exType\"\r\n                rules={[{ required: true, message: 'Please enter EX Type' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"IP\"\r\n                name=\"ip\"\r\n                rules={[{ required: true, message: 'Please enter IP' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Operator\"\r\n                name=\"operator\"\r\n                rules={[{ required: true, message: 'Please enter Operator' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"EX Cert\"\r\n                name=\"exCert\"\r\n                rules={[{ required: true, message: 'Please enter EX Cert' }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Date\"\r\n                name=\"date\"\r\n                rules={[{ required: true, message: 'Please Select Date' }]}\r\n              >\r\n                <Input type=\"date\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <Form.Item\r\n                label=\"Machine Details\"\r\n                name=\"machineDetails\"\r\n                rules={[{ required: true, message: 'Please enter Machine Details' }]}\r\n              >\r\n                <Input.TextArea />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Upload File\"\r\n                name=\"uploadFile\"\r\n              >\r\n                <input type=\"file\" style={styles.uploadFile} onChange={handleFileSelect} />\r\n                <ul style={styles.files}>\r\n                  {selectedFiles.map((file, index) => (\r\n                    <li key={index}>\r\n                      {file.name}\r\n                      <CloseCircleOutlined onClick={() => delUplFile(index)} />\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                label=\"Machine Status\"\r\n                name=\"machineStatus\"\r\n              >\r\n                <Switch onChange={(checked) => setMachineStatus(checked)} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <div className=\"d-flex justify-content-end gap-3\">\r\n            <Button type=\"button\" onClick={handleBackClick}>\r\n              Back\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewMachine;\r\n"],"sourceRoot":""}