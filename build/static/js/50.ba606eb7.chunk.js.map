{"version":3,"sources":["history.js","auth/FetchInterceptor.js","services/JwtAuthService.js","components/util-components/CustomIcon/index.js","views/auth-views/components/LoginForm.js","Logo.svg","configs/FirebaseConfig.js","auth/FirebaseOtp.js","views/auth-views/authentication/login-1/index.js"],"names":["history","service","axios","create","baseURL","API_BASE_URL","timeout","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","headers","push","window","location","reload","error","notification","message","Promise","reject","response","data","notificationParam","status","description","removeItem","JwtAuthService","fetch","url","method","CustomIcon","React","forwardRef","props","_","_jsx","Icon","component","svg","className","LoginForm","useHistory","otherSignIn","showForgetPassword","hideAuthMessage","onForgetPasswordClick","showLoading","extra","loading","showMessage","authenticated","showAuthMessage","token","redirect","allowRedirect","useEffect","setTimeout","renderOtherSignIn","_jsxs","children","Divider","Button","onClick","disabled","icon","GoogleSVG","FacebookSVG","_Fragment","motion","div","initial","opacity","marginBottom","animate","Alert","type","showIcon","Form","layout","name","onFinish","values","login","then","resp","e","Item","label","rules","required","Input","prefix","MailOutlined","htmlType","block","defaultProps","mapDispatchToProps","connect","_ref","auth","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","getAuth","backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","backgroundColor","logoCss","position","top","left","Option","Select","LoginOne","useSelector","state","theme","currentTheme","step","setStep","useState","form","useForm","phoneNumber","setPhoneNumber","countryCode","setCountryCode","visibleModal","setVisible","otp","setOtp","options","setOptions","setLoading","searchValue","setSearchValue","selectBefore","onChange","value","style","width","handlePhoneNumberSubmit","async","length","res","axiosInstance","post","phoneCode","phoneNo","item","success","sendUID","console","log","err","_res$data$item$token","_res$data$item$user","_res$data$item$user2","_res$data$item$token2","_res$data$item$user3","_res$data$item$user4","_res$data$item$user5","user","setItem","company_name","parent_id","role_id","id","handleOTPSubmit","confirmationResult","confirm","result","uid","catch","src","Logo","alt","paddingTop","marginTop","OrangeLogo","addonBefore","target","color","OTPInput","otpValue","autoFocus","OTPLength","isNumberInput","shouldAutoFocus","isInputNum","inputStyle","border","borderRadius","padding","boxShadow","outline","containerStyle","justifyContent","inputContainerStyle","margin","inputClassName","hasErrored","errorStyle","borderColor","focusStyle","onComplete","cursor","href","Slider","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","arrows","textTransform","fontSize","lineHeight","fontWeight","height","Modal","title","visible","onOk","submit","onCancel","email","nric_fin_number","AutoComplete","onSearch","search","items","map","onSelect","placeholder","Spin","size","marginLeft"],"mappings":"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","file":"static/js/50.ba606eb7.chunk.js","sourcesContent":["import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000\r\n})\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\t\r\n  if (jwtToken) {\r\n    config.headers[TOKEN_PAYLOAD_KEY] = jwtToken\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\t\r\n\t// Remove token and redirect \r\n\tif (error.response.status === 400 || error.response.status === 403) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\t\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tnotification.error(notificationParam)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service","import fetch from 'auth/FetchInterceptor'\r\n\r\nconst JwtAuthService = {}\r\n\r\nJwtAuthService.login = function (data) {\r\n\treturn fetch({\r\n\t\turl: '/posts',\r\n\t\tmethod: 'post',\r\n\t\theaders: {\r\n      'public-request': 'true'\r\n    },\r\n\t\tdata: data\r\n\t})\r\n}\r\n\r\nJwtAuthService.signUp = function (data) {\r\n\treturn fetch({\r\n\t\turl: '/auth/signup',\r\n\t\tmethod: 'post',\r\n\t\theaders: {\r\n      'public-request': 'true'\r\n    },\r\n\t\tdata: data\r\n\t})\r\n}\r\n\r\nexport default JwtAuthService","import React from 'react'\r\nimport Icon from '@ant-design/icons';\r\n\r\nconst CustomIcon = React.forwardRef((props, _) => <Icon component={props.svg} className={props.className}/>)\r\n\r\nexport default CustomIcon\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form, Input, Divider, Alert } from \"antd\";\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport { GoogleSVG, FacebookSVG } from 'assets/svg/icon';\r\nimport CustomIcon from 'components/util-components/CustomIcon'\r\nimport {  \r\n\tshowLoading, \r\n\tshowAuthMessage, \r\n\thideAuthMessage,\r\n\tauthenticated\r\n} from 'redux/actions/Auth';\r\nimport JwtAuthService from 'services/JwtAuthService'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport const LoginForm = (props) => {\r\n\tlet history = useHistory();\r\n\r\n\tconst { \r\n\t\totherSignIn, \r\n\t\tshowForgetPassword, \r\n\t\thideAuthMessage,\r\n\t\tonForgetPasswordClick,\r\n\t\tshowLoading,\r\n\t\textra,\r\n\t\tloading,\r\n\t\tshowMessage,\r\n\t\tmessage,\r\n\t\tauthenticated,\r\n\t\tshowAuthMessage,\r\n\t\ttoken,\r\n\t\tredirect,\r\n\t\tallowRedirect\r\n\t} = props\r\n\r\n\tconst onLogin = values => {\r\n\t\tshowLoading()\r\n\t\tconst fakeToken = 'fakeToken'\r\n\t\tJwtAuthService.login(values).then(resp => {\r\n\t\t\tauthenticated(fakeToken)\r\n\t\t}).then(e => {\r\n\t\t\tshowAuthMessage(e)\r\n\t\t})\r\n\t};\r\n\r\n\tconst onGoogleLogin = () => {\r\n\t\tshowLoading()\r\n\t}\r\n\r\n\tconst onFacebookLogin = () => {\r\n\t\tshowLoading()\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (token !== null && allowRedirect) {\r\n\t\t\thistory.push(redirect)\r\n\t\t}\r\n\t\tif(showMessage) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\thideAuthMessage();\r\n\t\t}, 3000);\r\n\t\t}\r\n\t});\r\n\t\r\n\tconst renderOtherSignIn = (\r\n\t\t<div>\r\n\t\t\t<Divider>\r\n\t\t\t\t<span className=\"text-muted font-size-base font-weight-normal\">or connect with</span>\r\n\t\t\t</Divider>\r\n\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t<Button \r\n\t\t\t\t\tonClick={() => onGoogleLogin()} \r\n\t\t\t\t\tclassName=\"mr-2\" \r\n\t\t\t\t\tdisabled={loading} \r\n\t\t\t\t\ticon={<CustomIcon svg={GoogleSVG}/>}\r\n\t\t\t\t>\r\n\t\t\t\t\tGoogle\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button \r\n\t\t\t\t\tonClick={() => onFacebookLogin()} \r\n\t\t\t\t\ticon={<CustomIcon svg={FacebookSVG}/>}\r\n\t\t\t\t\tdisabled={loading} \r\n\t\t\t\t>\r\n\t\t\t\t\tFacebook\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<motion.div \r\n\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }} \r\n\t\t\t\tanimate={{ \r\n\t\t\t\t\topacity: showMessage ? 1 : 0,\r\n\t\t\t\t\tmarginBottom: showMessage ? 20 : 0 \r\n\t\t\t\t}}> \r\n\t\t\t\t<Alert type=\"error\" showIcon message={message}></Alert>\r\n\t\t\t</motion.div>\r\n\t\t\t<Form \r\n\t\t\t\tlayout=\"vertical\" \r\n\t\t\t\tname=\"login-form\"\r\n\t\t\t\tonFinish={onLogin}\r\n\t\t\t>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\tlabel=\"Email\" \r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: 'Please input your email',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\ttype: 'email',\r\n\t\t\t\t\t\t\tmessage: 'Please enter a validate email!'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]}>\r\n\t\t\t\t\t<Input prefix={<MailOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t{\r\n\t\t\t\t\totherSignIn ? renderOtherSignIn : null\r\n\t\t\t\t}\r\n\t\t\t\t{ extra }\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nLoginForm.propTypes = {\r\n\totherSignIn: PropTypes.bool,\r\n\tshowForgetPassword: PropTypes.bool,\r\n\textra: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n};\r\n\r\nLoginForm.defaultProps = {\r\n\totherSignIn: true,\r\n\tshowForgetPassword: false\r\n};\r\n\r\nconst mapStateToProps = ({auth}) => {\r\n\tconst {loading, message, showMessage, token, redirect} = auth;\r\n  \treturn {loading, message, showMessage, token, redirect}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tshowAuthMessage,\r\n\tshowLoading,\r\n\thideAuthMessage,\r\n\tauthenticated\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\r\n","export default __webpack_public_path__ + \"static/media/Logo.395390b5.svg\";","const firebaseConfig = {\r\n  apiKey: \"AIzaSyBW4y5A8HAiboG6UJjtlj9sMUc0Zuh-Ns0\",\r\n  authDomain: \"jdworks-49200.firebaseapp.com\",\r\n  projectId: \"jdworks-49200\",\r\n  storageBucket: \"jdworks-49200.firebasestorage.app\",\r\n  messagingSenderId: \"997372637377\",\r\n  appId: \"1:997372637377:web:cf324cadf69546016de440\",\r\n  measurementId: \"G-QVDVQPRZLT\"\r\n};\r\n\r\n\r\nexport default firebaseConfig\r\n\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport firebaseConfig from \"configs/FirebaseConfig\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n// const app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\n// const analytics = getAnalytics(app);","import React, { useEffect, useState } from \"react\";\r\nimport LoginForm from \"../../components/LoginForm\";\r\nimport {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  InputNumber,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Modal,\r\n  Form,\r\n  Spin,\r\n  AutoComplete,\r\n} from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Logo from \"../../../../Logo.svg\";\r\nimport {\r\n  getAuth,\r\n  signInWithPhoneNumber,\r\n  RecaptchaVerifier,\r\n} from \"firebase/auth\";\r\nimport { OrangeLogo } from \"assets/svg/icon\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport OTPInput from \"otp-input-react\";\r\nimport { axiosInstance } from \"App\";\r\nimport { auth } from \"auth/FirebaseOtp\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { MailOutlined } from \"@ant-design/icons\";\r\nconst backgroundStyle = {\r\n  backgroundImage: \"url(/img/others/wave.svg)\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundSize: \"contain\",\r\n  backgroundPosition: \"top\",\r\n  backgroundColor: \"white\",\r\n};\r\nconst logoCss = {\r\n  position: \"absolute\",\r\n  top: \"1rem\",\r\n  left: \"1rem\",\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\nconst LoginOne = (props) => {\r\n  const theme = useSelector((state) => state.theme.currentTheme);\r\n  const [step, setStep] = useState(1);\r\n  const [form] = Form.useForm();\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [countryCode, setCountryCode] = useState(\"+65\");\r\n  const [visibleModal, setVisible] = useState(false);\r\n  const history = useHistory();\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [options, setOptions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const fetchCompanies = async (searchValue) => {\r\n    if (!searchValue) return;\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        `/api/app/auth/searchExistingCompanies`,\r\n        {\r\n          search: searchValue,\r\n        }\r\n      );\r\n      console.log(response.data.items);\r\n      setOptions(\r\n        response.data.items.map((item) => {\r\n          return { value: item.company_name };\r\n        })\r\n      ); // Ensure response.data is an array of company names or objects\r\n    } catch (error) {\r\n      console.error(\"Error fetching companies:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      history.push(\"/app\");\r\n    } else {\r\n      // history.push('/auth/login')\r\n    }\r\n  });\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 2000,\r\n    arrows: false,\r\n  };\r\n\r\n  const selectBefore = (\r\n    <Select\r\n      onChange={(e) => {\r\n        setCountryCode(e);\r\n      }}\r\n      value={countryCode}\r\n      // defaultValue=\"in\"\r\n      style={{\r\n        width: 80,\r\n      }}\r\n    >\r\n      <Option value=\"+91\">IND</Option>\r\n      <Option value=\"+65\">SG</Option>\r\n    </Select>\r\n  );\r\n\r\n  function onCaptchVerify() {\r\n    const recaptchaContainer = document.getElementById(\"recaptcha-container\");\r\n\r\n    if (!recaptchaContainer) {\r\n      console.error(\"Error: recaptcha-container element not found!\");\r\n      return;\r\n    }\r\n    if (!window.recaptchaVerifier) {\r\n      window.recaptchaVerifier = new RecaptchaVerifier(\r\n        auth,\r\n        \"recaptcha-container\",\r\n        {\r\n          size: \"invisible\",\r\n          callback: (response) => {\r\n            console.log(\"recaptcha resolved\");\r\n          },\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  const firebaseLogin = async () => {\r\n    const appVerifier = await window.recaptchaVerifier;\r\n    const formatPh = `${countryCode}${phoneNumber}`;\r\n\r\n    signInWithPhoneNumber(auth, formatPh, appVerifier)\r\n      .then((confirmationResult) => {\r\n        window.confirmationResult = confirmationResult;\r\n        console.log(\"confirmationResult\", confirmationResult);\r\n        setStep(2);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        // setOtpToggle(false);\r\n        // console.log(\"error\", error);\r\n        if (error) {\r\n          message.error(\r\n            \"Invalid number entered ! please confirm country code and registered number\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n  const handlePhoneNumberSubmit = async () => {\r\n    setOtp(\"\");\r\n    if (phoneNumber.length < 8) {\r\n      message.error(\"Please enter a valid phone number\");\r\n      return;\r\n    }\r\n    try {\r\n      const res = await axiosInstance.post(\"/api/app/auth/checkByNumber\", {\r\n        // phoneNumber: countryCode + phoneNumber,\r\n        phoneCode: countryCode,\r\n        phoneNo: phoneNumber,\r\n      });\r\n      if (res.data.item.success == true) {\r\n        sendUID({ phoneCode: countryCode, phoneNo: phoneNumber });\r\n      } else {\r\n        setVisible(true);\r\n      }\r\n      console.log(res.data);\r\n      // if (res.data.item.exists == false) {\r\n      // \tmessage.error(res.data.message)\r\n      // } else {\r\n\r\n      // \tonCaptchVerify();\r\n      // \tfirebaseLogin();\r\n\r\n      // }\r\n    } catch (err) {\r\n      console.log(err);\r\n      message.error(\"You are not registered. Please sign up\");\r\n      setVisible(true);\r\n      // message.error('Something went wrong. Please try again later');\r\n    }\r\n    // setStep(2);\r\n  };\r\n\r\n  const sendUID = async (data) => {\r\n    try {\r\n      const res = await axiosInstance.post(\"/api/web/auth/login\", {\r\n        // uid: uid,\r\n        ...data,\r\n      });\r\n      console.log(res.data);\r\n      if (res.data.item.token?.token) {\r\n        message.success(\"Logged in successfully\");\r\n\t\tconsole.log(res.data.item.user);\r\n        localStorage.setItem(\"company_name\", res.data.item.user?.company_name);\r\n        localStorage.setItem(\"parent_id\", res.data.item.user?.parent_id);\r\n        localStorage.setItem(\"token\", res.data.item.token?.token);\r\n        localStorage.setItem(\"role\", res.data.item.user?.role_id);\r\n        localStorage.setItem(\"name\", res.data.item.user?.name); \r\n\t\tlocalStorage.setItem(\"user_id\", res.data.item.user?.id);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      message.error(\"Something went wrong. Please try again later\");\r\n    }\r\n  };\r\n\r\n  const handleOTPSubmit = () => {\r\n    if (otp.length < 6) {\r\n      message.error(\"Please enter a valid OTP\");\r\n      return;\r\n    }\r\n    window.confirmationResult\r\n      .confirm(otp)\r\n      .then((result) => {\r\n        // User signed in successfully.\r\n        // console.log(result.user);\r\n        const user = result.user.uid;\r\n        sendUID(user);\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"Invalid OTP entered\");\r\n        // User couldn't sign in (bad verification code?)\r\n        // ...\r\n      });\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    if (!searchValue) {\r\n      message.error(\"Please select a company name\");\r\n    }\r\n    console.log(values, searchValue);\r\n    // return;\r\n    sendUID({\r\n      phoneCode: countryCode,\r\n      phoneNo: phoneNumber,\r\n      name: values.name,\r\n      company_name: searchValue,\r\n\t  email: values.email,\r\n\t  nric_fin_number: values.nric_fin_number\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-100\" style={backgroundStyle}>\r\n      <div id=\"recaptcha-container\"></div>\r\n      <div style={logoCss}>\r\n        {\" \"}\r\n        <img src={Logo} alt=\"...\"></img>\r\n      </div>\r\n      <div className=\"row d-flex h-100\" style={{ paddingTop: \"110px\" }}>\r\n        <div\r\n          style={{ marginTop: \"80px\", width: \"50%\" }}\r\n          className=\"d-flex flex-column justify-content-start align-items-center\"\r\n        >\r\n          <div>\r\n            <div className=\"d-flex justify-content-center mb-4\">\r\n              <OrangeLogo />\r\n            </div>\r\n            <h2 className=\"text-center mt-2\">\r\n              {step === 1 ? \"LOGIN\" : \"Enter OTP\"}\r\n            </h2>\r\n            <p className=\"text-center\">\r\n              {\" \"}\r\n              {step === 1\r\n                ? \"Please enter your phone number below to get started.\"\r\n                : `Please enter 6 digit OTP sent to ${countryCode} ${phoneNumber} below.`}\r\n            </p>\r\n            {step === 1 && (\r\n              <>\r\n                <h4 style={{ marginTop: \"2.7rem\" }} className=\"font-bolder \">\r\n                  Phone Number\r\n                </h4>\r\n                <Input\r\n                  addonBefore={selectBefore}\r\n                  onChange={(e) => setPhoneNumber(e.target.value)}\r\n                  value={phoneNumber}\r\n                />\r\n                <Button\r\n                  style={{\r\n                    backgroundColor: \"#3CA6C1\",\r\n                    color: \"white\",\r\n                    marginTop: \"4rem\",\r\n                    marginBottom: \"1.9rem\",\r\n                  }}\r\n                  className=\"w-100\"\r\n                  onClick={handlePhoneNumberSubmit}\r\n                >\r\n                  Continue\r\n                </Button>\r\n              </>\r\n            )}\r\n            {step === 2 && (\r\n              <>\r\n                <h4 style={{ marginTop: \"2.7rem\" }} className=\"font-bolder \">\r\n                  OTP Verification\r\n                </h4>\r\n                {/* Use the OTPInput component here */}\r\n                <OTPInput\r\n                  className=\"OtpInput\"\r\n                  value={otp}\r\n                  onChange={(otpValue) => setOtp(otpValue)}\r\n                  autoFocus\r\n                  OTPLength={6}\r\n                  isNumberInput\r\n                  shouldAutoFocus\r\n                  isInputNum\r\n                  inputStyle={{\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    padding: \"0.5rem\",\r\n                    boxShadow: \"0 0 5px rgba(0, 0, 0, 0.2)\",\r\n                    outline: \"none\",\r\n                  }}\r\n                  containerStyle={{ justifyContent: \"space-between\" }} // Adjust to space between inputs\r\n                  inputContainerStyle={{ margin: \"0 0.5rem\" }}\r\n                  inputClassName=\"custom-otp-input\"\r\n                  disabled={false}\r\n                  hasErrored={false}\r\n                  errorStyle={{ borderColor: \"red\" }}\r\n                  focusStyle={{ borderColor: \"blue\" }}\r\n                  onComplete={(otpValue) => handleOTPSubmit(otpValue)}\r\n                />\r\n\r\n                <p className=\"text-center mt-2\">\r\n                  Don't receive OTP?{\" \"}\r\n                  <span\r\n                    style={{\r\n                      color: \"#3CA6C1\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    className=\"text-center\"\r\n                    onClick={() => {\r\n                      handlePhoneNumberSubmit();\r\n                    }}\r\n                  >\r\n                    Request Again\r\n                  </span>\r\n                </p>\r\n                <Button\r\n                  style={{\r\n                    backgroundColor: \"#3CA6C1\",\r\n                    color: \"white\",\r\n                    marginTop: \"4rem\",\r\n                    marginBottom: \"1.9rem\",\r\n                  }}\r\n                  className=\"w-100\"\r\n                  onClick={() => handleOTPSubmit(otp)}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </>\r\n            )}\r\n            <p className=\"text-center\">\r\n              By continuing, you agree to the JD Works Terms & Services\r\n            </p>\r\n            <a className=\"text-center d-block w-100\" href=\"#\">\r\n              Terms & Services\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ width: \"50%\" }} className=\"loginRightSlider\">\r\n          <div>\r\n            <Slider {...settings}>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundImage: \"url(/img/others/Rectanglepurple.svg)\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                    // width: '680px',\r\n                    // borderRadius: '20px',\r\n                    padding: \"5rem\",\r\n                    backgroundPosition: \"center\",\r\n                    // height: '680px'\r\n                  }}\r\n                >\r\n                  <h2\r\n                    className=\"text-white mt-2\"\r\n                    style={{ textTransform: \"uppercase\", fontSize: \"1.6rem\" }}\r\n                  >\r\n                    Machine conditions monitoring get easy\r\n                  </h2>\r\n                  <p\r\n                    className=\"text-white mb-5\"\r\n                    style={{\r\n                      fontSize: \"1rem\",\r\n                      width: \"80%\",\r\n                      lineHeight: \"18px\",\r\n                      fontWeight: \"100\",\r\n                    }}\r\n                  >\r\n                    Enhancing productivity and efficiency with smart mobile\r\n                    applications\r\n                  </p>\r\n                  <img\r\n                    style={{ width: \"65%\", margin: \"auto\" }}\r\n                    src=\"/img/others/machinefirst.svg\"\r\n                    alt=\"...\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundImage: \"url(/img/others/Rectanglegreen.svg)\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                    // width: '680px',\r\n                    // borderRadius: '20px',\r\n                    padding: \"5rem\",\r\n                    backgroundPosition: \"center\",\r\n                    // height: '680px'\r\n                  }}\r\n                >\r\n                  <h2\r\n                    className=\"text-white mt-2\"\r\n                    style={{\r\n                      textTransform: \"uppercase\",\r\n                      fontSize: \"1.6rem\",\r\n                      width: \"80%\",\r\n                    }}\r\n                  >\r\n                    Get ON-SITE MAINTENANCE SERVICES\r\n                  </h2>\r\n                  <p\r\n                    className=\"text-white mb-5\"\r\n                    style={{\r\n                      fontSize: \"1rem\",\r\n                      width: \"70%\",\r\n                      lineHeight: \"18px\",\r\n                      fontWeight: \"100\",\r\n                    }}\r\n                  >\r\n                    Our expert team deliver best on site maintenance services{\" \"}\r\n                  </p>\r\n                  <img\r\n                    style={{ width: \"65%\", margin: \"auto\" }}\r\n                    src=\"/img/others/machinetwo.svg\"\r\n                    alt=\"...\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    backgroundImage: \"url(/img/others/Rectangleorange.svg)\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                    width: \"100%\",\r\n                    // borderRadius: '20px',\r\n                    padding: \"5rem\",\r\n                    // backgroundPosition: 'center',\r\n                    height: \"100%\",\r\n                  }}\r\n                >\r\n                  <h2\r\n                    className=\"text-white mt-2\"\r\n                    style={{\r\n                      textTransform: \"uppercase\",\r\n                      fontSize: \"1.6rem\",\r\n                      width: \"80%\",\r\n                    }}\r\n                  >\r\n                    Get INSTANT QUOTATION ON INQURIY\r\n                  </h2>\r\n                  <p\r\n                    className=\"text-white mb-5\"\r\n                    style={{\r\n                      fontSize: \"1rem\",\r\n                      width: \"70%\",\r\n                      lineHeight: \"18px\",\r\n                      fontWeight: \"100\",\r\n                    }}\r\n                  >\r\n                    Generate quick quotation for your problems you inquire.\r\n                  </p>\r\n                  <img\r\n                    style={{ width: \"65%\", margin: \"auto\" }}\r\n                    src=\"/img/others/machinethree.svg\"\r\n                    alt=\"...\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        title=\"Sign Up\"\r\n        visible={visibleModal}\r\n        onOk={() => {\r\n          //   onFinish();\r\n          form.submit();\r\n        }}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n        }}\r\n      >\r\n        <Form layout=\"vertical\" form={form} onFinish={onFinish}>\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            rules={[{ required: true, message: \"Please input your name!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Company Name\"\r\n            // name=\"company_name\"\r\n            // rules={[\r\n            //   { required: true, message: \"Please input your company name!\" },\r\n            // ]}\r\n          >\r\n            <AutoComplete\r\n              options={options} // List of company suggestions\r\n              onSearch={fetchCompanies} // API call on typing\r\n              onSelect={(value) => setSearchValue(value)} // Sets selected value\r\n              onChange={(value) => setSearchValue(value)} // Allows free text input\r\n              value={searchValue} // Keeps input value controlled\r\n            >\r\n              <Input placeholder=\"Search or enter company name\" />\r\n            </AutoComplete>\r\n            {loading && <Spin size=\"small\" style={{ marginLeft: 10 }} />}\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"email\"}\r\n            label=\"Email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your email\",\r\n              },\r\n              {\r\n                type: \"email\",\r\n                message: \"Please enter a validate email!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input prefix={<MailOutlined className=\"text-primary\" />} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"nric_fin_number\"\r\n            label=\"NRIC/FIN Number\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your NRIC/FIN number!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginOne;\r\n\r\n{\r\n  /* <Row justify=\"center\">\r\n\t\t\t\t\t<Col xs={20} sm={20} md={20} lg={7}> */\r\n}\r\n{\r\n  /* <Card>\r\n\t\t\t\t\t\t\t<div className=\"my-4\">\r\n\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={`/img/${theme === 'light' ? 'logo.png': 'logo-white.png'}`} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t<p>Don't have an account yet? <a href=\"/auth/register-1\">Sign Up</a></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={20} lg={20}>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Card> */\r\n}\r\n{\r\n  /* </Col>\r\n\t\t\t\t</Row> */\r\n}\r\n"],"sourceRoot":""}